
//______________________________________________________________________________________________________________________________
// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

// Console.Write("Введите m: "); // введите число M
// var num_m = Convert.ToDouble(Console.ReadLine()); // создаем переменную спрашиваем число

// Console.Write("Введите n: "); // введите число N
// var num_n = Convert.ToDouble(Console.ReadLine()); // создаем переменную спрашиваем число

// double FuncAkkerman(double m, double n)
// {
//     if (m == 0)
//     {
//         return n + 1;
//     }
//     else if (n == 0 && m > 0)
//     {
//         return FuncAkkerman(m - 1, 1);
//     }
//     else
//     {
//         return (FuncAkkerman(m - 1, FuncAkkerman(m, n - 1)));
//     }
// }

// Console.Write($"{FuncAkkerman(num_m, num_n)}");

//______________________________________________________________________________________________________________________________
// Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.


// Напишите программу, которая будет принимать на вход число
// и возвращать сумму его цифр.

int SumNumber(int m, int n)
{
    if(n > m) 
    {
        return SumNumber(m, n - 1) + n;
    }
    else return m;
}

Console.Write("Введите m: "); // введите число M
var num_m = Convert.ToInt32(Console.ReadLine()); // создаем переменную спрашиваем число

Console.Write("Введите n: "); // введите число N
var num_n = Convert.ToInt32(Console.ReadLine()); // создаем переменную спрашиваем число

if (num_m > num_n)
{   int temp = num_m;
    num_m = num_n;
    num_n = temp;
    Console.Write($"Сумма натуральных элементов в промежутке от {num_n} до {num_m} - {SumNumber(num_m, num_n)}");
}
else
{
    if (num_m == num_n) Console.Write($"Введите число 'n' больше чем 'm', сейчас они равны");
    else Console.Write($"Сумма натуральных элементов в промежутке от {num_m} до {num_n} - {SumNumber(num_m, num_n)}");
}


//______________________________________________________________________________________________________________________________

// Задайте значение N. Напишите программу, которая
// выведет все натуральные числа в промежутке от 1 до N.

// void ShowNums(int n)
// {
//     if(n > 1) ShowNums(n - 1);
    
//     Console.Write(n + " ");
// }

// Console.Write("Введите N: "); // введите число N
// int num = Convert.ToInt32(Console.ReadLine()); // создаем переменную спрашиваем число
// ShowNums(num);
// Console.WriteLine();

//______________________________________________________________________________________________________________________________


// Напишите программу, которая будет принимать на вход число
// и возвращать сумму его цифр.

// int SumNumber(int n)
// {
//     if(n > 0) return SumNumber(n / 10) + n % 10;
//     else return 0;
// }

// Console.Write("Введите N: "); // введите число N
// int num = Convert.ToInt32(Console.ReadLine()); // создаем переменную спрашиваем число
// Console.WriteLine(SumNumber(num));
// Console.WriteLine();


//______________________________________________________________________________________________________________________________

// Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.

// void ShowNums(int m, int n)
// {
//     if(n > m) ShowNums(m, n - 1);
//     Console.Write(n + " ");
// }
// Console.WriteLine();
// ShowNums(5, 10);


//______________________________________________________________________________________________________________________________

// Напишите программу, которая на вход принимает два числа A и B, и возводит число А в целую степень B с помощью рекурсии.

// int PowerValue(int a, int b)
// {
//     if (b < 1) return PowerValue(a,b - 1) * a;
//     else return a;
// }
// Console.WriteLine(PowerValue(3,2));

//______________________________________________________________________________________________________________________________