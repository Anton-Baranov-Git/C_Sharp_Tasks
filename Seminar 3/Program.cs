// // // Задача 19 Напишите программу, которая принимает на вход пятизначное число и проверяет, является ли оно палиндромом.
// // // Сначала решил на Питоне, потом просто переписал, на C# почему было очень тяжко
// // // Взял числа long что бы больше поместилось :)

// void Palindrom(long number) // создаем метод, число 14212 и 12821
// {
//     long temp_number = number; // создаем временную переменную (temp_number = 14212, 12821)
//     long reverse_number = 0; // создаем переменную reverse_number
//     if(number < 10 && number > -10)
//     {
//         Console.Write($"Введите число больше двух знаков");
//     }
//     else
//     {
//         if (number > 0) // если number положительный
//         {
//         while (number > 0) // если 14212, 12821 больше 0
//             {
//                 long remainder = number % 10; // Вычисляем остаток от 14212, 12821 = 2, 1 для того что бы его прибавлять
//                 reverse_number = reverse_number * 10 + remainder; // записываем в обратную переменную 14212, 12821 * 10 = 1421202, 1282101
//                 number = number / 10; // запускаем счетчик 14212, 12821 / 10 = 1421, 1282
//             }
//             if(temp_number == reverse_number) Console.Write($"Число {temp_number} является палиндромом и в обратном порядке будет {temp_number}"); // если числа равны
//             else Console.Write($"Число {temp_number} не является палиндромом, так как в обратном порядке будет {reverse_number}"); // в другом случае
//         }
//         else // если number отрицательный
//         {
//             while (number < 0) // если 14212, 12821 больше 0
//         {
//             long remainder = number % 10; // Вычисляем остаток от 14212, 12821 = 2, 1 для того что бы его прибавлять
//             reverse_number = reverse_number * 10 + remainder; // записываем в обратную переменную 14212, 12821 * 10 = 1421202, 1282101
//             number = number / 10; // запускаем счетчик 14212, 12821 / 10 = 1421, 1282
//         }
//         if(temp_number == reverse_number) Console.Write($"Число {temp_number} является палиндромом и в обратном порядке будет {temp_number}"); // если числа равны
//         else Console.Write($"Число {temp_number} не является палиндромом, так как в обратном порядке будет {reverse_number}"); // в другом случае
//         }
//     }
// }
// Console.Write("Введите число: "); // запрашиваем число
// long num_1 = Convert.ToInt64(Console.ReadLine()); // получаем от пользователя число
// Palindrom(num_1); // запускаем метод

// __________________________________________________________________________________________________________________________________________________________________

// Решение через строку
// Логически так легче решать

// void Palindrom(long number) // создаем
// {
//     string number_text = Convert.ToString(number); // конвертируем
//     int length_number = number_text.Length; // высчитываем длину
//     int i = 1; // создаем переменную
//     int unequal = 0; // еще переменная
//     int iteration = length_number / 2; // считаем количество итераций
//     int index = 1;
//     if(number < 10 && number > -10)
//     {
//         Console.Write($"Введите число больше двух знаков");
//     }
//     else
//     {
//         if (number < 0)
//             {
//                 index = 0;
//             }
//             while(iteration < length_number) // количество итераций меньше длины
//             {
//                 iteration ++; // увеличиваем счетчик
//                 if(number_text[i - index]  != number_text[length_number - i]) // сравниваем по одному символу
//                 {
//                 i ++; // увеличиваем счетчик
//                 unequal ++; // увеличиваем счетчик
//                 }
//             }
//             if (unequal > 0) Console.Write($"Число {number} не является палиндромом"); // если не равно
//             else Console.Write($"Число {number} является палиндромом и в обратном порядке будет {number}"); // если равно
//     }
    
// }

// Console.Write("Введите число: "); // запрашиваем число
// long num_1 = Convert.ToInt64(Console.ReadLine()); // получаем от пользователя число
// Palindrom(num_1); // запускаем метод

// __________________________________________________________________________________________________________________________________________________________________


// Задача 21 Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 3D пространстве.

// void DistanceXYZ(double x1, double x2, double y1, double y2, double z1, double z2) // создаем метод
// {
//     double distance = Math.Sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) + (z2 - z1) * (z2 - z1)); // считаем
//     Console.Write($"Расстояние между точками в 3D пространстве: {distance}"); // выводим
// }
// Console.Write("Введите первое число кординаты X: "); // запрашиваем число
// double Xa = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Xa
// Console.Write("Введите второе число кординаты X: "); // запрашиваем число
// double Xb = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Xb

// Console.Write("Введите первое число кординаты Y: "); // запрашиваем число
// double Ya = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Ya
// Console.Write("Введите второе число кординаты Y: "); // запрашиваем число
// double Yb = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Yb

// Console.Write("Введите первое число кординаты Z: "); // запрашиваем число
// double Za = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Za
// Console.Write("Введите второе число кординаты Z: "); // запрашиваем число
// double Zb = Convert.ToDouble(Console.ReadLine()); // получаем от пользователя Zb

// DistanceXYZ(Xa, Xb, Ya, Yb, Za, Zb); применяем метод

// __________________________________________________________________________________________________________________________________________________________________

// Задача 23 Напишите программу, которая принимает на вход число (N) и выдаёт таблицу кубов чисел от 1 до N.

// void Cube(int number) // создаем метод
// {
//     int i = 1; // создаем начальный индекс
//     if(number > 0) // число меньше нуля
//     {
//     while(i <= number) // количество итераций
//         {
//             if(i == number) Console.Write($"{i * i * i}"); // убираем запятую вконце 
//             else Console.Write($"{i * i * i}, "); // считаем
//             i ++; // счетчик +1
//         }
//     }
//     else // в другом случае
//     {
//        Console.Write($"Вы ввели \"{number}\", данное число меньше или равно \"0\", введите число больше \"0\""); // сообщение при 0 и меньше
//     }

// }
// Console.Write("Введите число: "); // просим ввести число
// int numb_1 = Convert.ToInt32(Console.ReadLine()); // ввод числа
// Cube(numb_1); // запускаем метод


// __________________________________________________________________________________________________________________________________________________________________


// Задача 2. Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y).

// void Diaposon(int number)
// {
//     if(number == 1) Console.WriteLine("X - положительный (больше нуля), Y - положительный(больше нуля)");
//     if(number == 2) Console.WriteLine("X - отрицательный (меньше нуля), Y - положительный(больше нуля)");
//     if(number == 3) Console.WriteLine("X - отрицательный (менше нуля), Y - отрицательный(меньше нуля)");
//     if(number == 4) Console.WriteLine("X - положительный (больше нуля), Y - отрицательный(меньше нуля)");
//     if(number < 1 ^^ number > 4) Console.WriteLine("Некоректный ввод");
// }

// Console.Write("Введите число номер четверти: "); // запрашиваем число
// int num_1 = Convert.ToInt32(Console.ReadLine()); // получаем от пользователя число
// Diaposon(num_1);

// __________________________________________________________________________________________________________________________________________________________________

//  Задача 3. Напишите программу, которая принимает на вход число (n) и выдаёт квадраты чисел от 1 до n.

// void number(int number)
// {
//     int index = 1;
//     Console.Write($"Ответ будет: ");
//     while(index <= number)
//     {
//         int square = index * index;
//         index ++;
//         Console.Write($"{square}, ");
//     }
// }
// Console.Write("Введите число: "); // запрашиваем число
// int num_1 = Convert.ToInt32(Console.ReadLine()); // получаем от пользователя число
// number(num_1);

// Задача 4. Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.
// void programm(int xA, int xB, int yA, int yB)
// {
//     int result_1 = xA  
// }


// __________________________________________________________________________________________________________________________________________________________________


